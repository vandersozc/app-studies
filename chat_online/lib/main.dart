import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';void main() => runApp(MyApp());class MyApp extends StatefulWidget {  @override  _MyAppState createState() => _MyAppState();}final ThemeData kIOSTheme = ThemeData(    primarySwatch: Colors.orange,    primaryColor: Colors.grey[100],    primaryColorBrightness: Brightness.light);final ThemeData kDeaultTheme = ThemeData(    primarySwatch: Colors.purple, accentColor: Colors.orangeAccent[400]);class _MyAppState extends State<MyApp> {  @override  Widget build(BuildContext context) {    return MaterialApp(      title: "Chat app",      debugShowCheckedModeBanner: false,      theme: Theme.of(context).platform == TargetPlatform.iOS          ? kIOSTheme          : kDeaultTheme,      home: ChatScreen(),    );  }}class ChatScreen extends StatefulWidget {  @override  _ChatScreenState createState() => _ChatScreenState();}class _ChatScreenState extends State<ChatScreen> {  @override  Widget build(BuildContext context) {    return SafeArea(      //(SafeArea) -> Ignora o note do IOS da tela e a barra inferior      bottom: true,      top: true,      child: Scaffold(        appBar: AppBar(          title: Text("Chat app"),          centerTitle: true,          elevation:              Theme.of(context).platform == TargetPlatform.iOS ? 0.0 : 4.0,        ),        body: Column(          children: <Widget>[            Expanded(              child: ListView(                children: <Widget>[ChatMessage(), ChatMessage(), ChatMessage()],              ),            ),            Divider(              height: 1.0,            ),            Container(              decoration: BoxDecoration(color: Theme.of(context).cardColor),              child: TextComposer(),            )          ],        ),      ),    );  }}class TextComposer extends StatefulWidget {  @override  _TextComposerState createState() => _TextComposerState();}class _TextComposerState extends State<TextComposer> {  bool isComposing = false;  @override  Widget build(BuildContext context) {    return IconTheme(      data: IconThemeData(color: Theme.of(context).accentColor),      child: Container(        margin: const EdgeInsets.symmetric(horizontal: 8.0),        decoration: Theme.of(context).platform == TargetPlatform.iOS            ? BoxDecoration(                border: Border(top: BorderSide(color: Colors.grey[200])))            : null,        child: Row(          children: <Widget>[            Container(              child: IconButton(                icon: Icon(Icons.photo_camera),                onPressed: () {},              ),            ),            Expanded(              child: TextField(                decoration:                    InputDecoration.collapsed(hintText: "Enviar uma mensagem"),                onChanged: (text) {                  setState(() {                    isComposing = text.length > 0;                  });                },              ),            ),            Container(              margin: const EdgeInsets.symmetric(horizontal: 4.0),              child: Theme.of(context).platform == TargetPlatform.iOS                  ? CupertinoButton(                      child: Text("Enviar"),                      onPressed: isComposing ? () {} : null,                    )                  : IconButton(                      icon: Icon(Icons.send),                      onPressed: isComposing ? () {} : null,                    ),            )          ],        ),      ),    );  }}class ChatMessage extends StatelessWidget {  @override  Widget build(BuildContext context) {    return Container(      margin: const EdgeInsets.symmetric(vertical: 10.0, horizontal: 10.0),      child: Row(        crossAxisAlignment: CrossAxisAlignment.start,        children: <Widget>[          Container(            margin: const EdgeInsets.only(right: 16.0),            child: CircleAvatar(              backgroundImage: NetworkImage(                  "https://cdn.guff.com/site_1/media/20000/19700/items/bfa511af2df316f537c54498.jpg"),            ),          ),          Expanded(            child: Column(              crossAxisAlignment: CrossAxisAlignment.start,              children: <Widget>[                Text(                  "Vanderson",                  style: Theme.of(context).textTheme.subhead,                ),                Container(                  margin: const EdgeInsets.only(top: 5.0),                  child: Text("teste"),                )              ],            ),          )        ],      ),    );  }}